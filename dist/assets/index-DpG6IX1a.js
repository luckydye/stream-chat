(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();class p{static get service_name(){return"emotes"}static get global_emotes(){throw new Error("global_emotes getter not implemented")}static getGlobalEmotes(){throw new Error("getGlobalEmotes() not implemented")}static getChannelEmotes(e){throw new Error("getChannelEmotes() not implemented")}}class g{static get url_template(){return""}static get scale_template(){return{x1:"x1",x2:"x2",x3:"x3"}}get url_x1(){return this.constructor.url_template.replace("{{id}}",this.id).replace("{{scale}}",this.constructor.scale_template.x1)}get url_x2(){return this.constructor.url_template.replace("{{id}}",this.id).replace("{{scale}}",this.constructor.scale_template.x2)}get url_x3(){return this.constructor.url_template.replace("{{id}}",this.id).replace("{{scale}}",this.constructor.scale_template.x3)}constructor(e){this.id=e.id}}let h={};class d extends g{static get url_template(){return"https://cdn.betterttv.net/emote/{{id}}/{{scale}}"}static get scale_template(){return{x1:"1x",x2:"2x",x3:"3x"}}}class w extends p{static get service_name(){return"bttv"}static get global_emotes(){return h}static async getGlobalEmotes(){return fetch("https://api.betterttv.net/3/cached/emotes/global").then(e=>e.json()).then(e=>{for(let t of e)h[t.code]=new d(t);return h})}static async getChannelEmotes(e){return fetch("https://api.betterttv.net/3/cached/users/twitch/"+e).then(t=>t.json()).then(t=>{const o={};if(t.channelEmotes)for(let s of t.channelEmotes)o[s.code]=new d(s);if(t.sharedEmotes)for(let s of t.sharedEmotes)o[s.code]=new d(s);return o})}}let _={};class y extends g{static get url_template(){return"https://cdn.frankerfacez.com/emote/{{id}}/{{scale}}"}static get scale_template(){return{x1:"1",x2:"2",x3:"3"}}}class C extends p{static get service_name(){return"ffz"}static get global_emotes(){return _}static async getGlobalEmotes(){}static async getChannelEmotes(e){return fetch("https://api.frankerfacez.com/v1/room/id/"+e).then(t=>t.json()).then(t=>{if(t.sets){const o={};for(let s in t.sets)for(let r of t.sets[s].emoticons)o[r.name]=new y(r);return o}})}}let f={};class E extends g{static get url_template(){return"https://cdn.7tv.app/emote/{{id}}/{{scale}}.webp"}static get scale_template(){return{x1:"1x",x2:"2x",x3:"3x"}}}class O extends p{static get service_name(){return"7tv"}static get global_emotes(){return f}static async getGlobalEmotes(){return fetch("https://7tv.io/v3/emote-sets/global").then(e=>e.json()).then(e=>{for(let t of e.emotes)f[t.name]=new E(t);return f})}static async getChannelEmotes(e){return fetch(`https://7tv.io/v3/users/twitch/${e}`).then(t=>t.json()).then(t=>{const o={};for(let s of t.emote_set.emotes)o[s.name]=new E(s);return o})}}let a={},i={};const x=[w,C,O];class u{static get global_emotes(){return a}static getGlobalEmote(e){for(let t in a)if(a[t]&&e in a[t])return a[t][e]}static async getGlobalEmotes(){return await Promise.all([...x].map(async e=>{const t=await e.getGlobalEmotes();a[e.service_name]=t})).then(()=>a)}static getChachedChannelEmotes(e){return i[e]||u.getChannelEmotes(e),i[e]}static async getChannelEmotes(e){if(e)return i[e]||(i[e]={}),await Promise.all([...x].map(async t=>{const o=await t.getChannelEmotes(e);i[e][t.service_name]=o})).then(()=>i[e])}}function S(n){const e={tags:{},prefix:null,command:null,params:[],trailing:null};let t=0;if(n[t]==="@"){const s=n.indexOf(" ",t);n.slice(1,s).split(";").forEach(l=>{const[b,v]=l.split("=");e.tags[b]=v||null}),t=s+1}if(n[t]===":"){const s=n.indexOf(" ",t);e.prefix=n.slice(t+1,s),t=s+1}const o=n.indexOf(" ",t);if(o!==-1)e.command=n.slice(t,o),t=o+1;else return e.command=n.slice(t),e;for(;t<n.length;){if(n[t]===":"){e.trailing=n.slice(t+1).trim();break}const s=n.indexOf(" ",t);if(s===-1){e.params.push(n.slice(t).trim());break}else e.params.push(n.slice(t,s)),t=s+1}return e}const m=new Map;u.getChannelEmotes("94753024").then(n=>{for(const e in n)for(const t in n[e])m.set(t,n[e][t])});u.getGlobalEmotes().then(n=>{for(const e in n)for(const t in n[e])m.set(t,n[e][t])});const c=new WebSocket("wss://irc-ws.chat.twitch.tv/");c.addEventListener("open",()=>{console.log("Connected to chat WebSocket"),c.send("CAP REQ :twitch.tv/tags twitch.tv/commands"),c.send("PASS SCHMOOPIIE"),c.send("NICK justinfan12034"),c.send("USER justinfan12034 8 * :justinfan12034"),c.send(`JOIN ${location.hash}`)});c.addEventListener("message",n=>{const e=n.data,t=S(e);console.log(t),L(t.tags["display-name"],t.trailing,t)});c.addEventListener("close",()=>{console.log("Disconnected from chat WebSocket")});function L(n,e,t){if(!n)return;const o=document.createElement("div");o.classList.add("chat-message");const s=e.split(" ").map(r=>m.has(r)?`<img src="${m.get(r).url_x2}" />`:r);o.innerHTML=`<span class="username" style="--color:${t.tags.color};">${n}</span>: <span class="message">${s.join(" ")}</span>`,chat.appendChild(o),chat.children.length>100&&chat.removeChild(chat.firstChild),chat.lastChild.scrollIntoView()}
